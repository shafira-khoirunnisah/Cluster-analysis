rm(list=ls())
install.packages("readr") #Membaca data
install.packages("dplyr") #Data processing
install.packages("DT") #Menampilkan tabel agar mudah dilihat di browser
library(readr)
library(dplyr)
library(DT)
#Input data
dt=read.csv(file.choose())
View(dt)
#Statistika Deskriptif
summary(dt)
#Normalisasi data
dt_s <- round(scale(dt[,2:7]),4)
datatable(dt_s, caption="Data hasil standardisasi")
#Menentukan jumlah cluster
klaster <- c(1:9)
within_ss <- c()
for (i in klaster){
within_ss <- c(within_ss, kmeans(x=dt_s, centers=i, nstart=27)$tot.withinss)
}
plot(x = klaster, y = within_ss, type = "b", xlab = "Number of Cluster",
ylab = "Total Within Sum of Squares", main = "Elbow Plot")
abline(v = 3, col = 'red')
#Analisis cluster
set.seed(123)
kmeans_clustering <- kmeans(x = dt_s, centers = 3, nstart = 27)  #parameter nstart digunakan untuk memberitahu fungsi berapa kali inisiasi centroid awal (secara acak) yang akan dibentuk dan centers digunakan untuk memberitahu fungsi berapa jumlah klaster yang akan dibentuk.
kmeans_clustering
#Mengembalikan nilai centroid
dt %>%
mutate(claster = kmeans_clustering$cluster) %>%
group_by(claster) %>%
summarise(Mean_TPT = mean(Tingkat.Pengangguran.Terbuka), Mean_IPM = mean(Indeks.Pembangunan.Manusia),
Mean_PPM = mean(Persentase.Penduduk.Miskin), Mean_KP = mean(Kepadatan.Penduduk),
mean_PPK=mean(Pengeluaran.Per.Kapita..dalam.ribu.rupiah.), mean_UHH=mean(Usia.Harapan.Hidup))
#Pengelompokkan objek ke dalam cluster
dt %>%
mutate (claster = kmeans_clustering$cluster) %>%
select(Provinsi.Jawa.Barat, claster) %>%
arrange(claster)

